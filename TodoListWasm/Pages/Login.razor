@page "/login"

<PageTitle>Index</PageTitle>

@if (showAlert)
{
    <MudAlert Severity="Severity.Error" ShowCloseIcon="true" CloseIconClicked="this.CloseMe">@this.response.Message</MudAlert>
}

<MudGrid>
    <MudItem md="3"></MudItem>
    <MudItem md="6">
        <MudText Typo="Typo.h3" Align="Align.Center" GutterBottom="true">Blazor WASM Todo</MudText>
        <MudPaper Class="d-flex justify-center flex-grow-1 gap-4" Elevation="0">
            <EditForm Model="@input" OnValidSubmit="Submit">
                <DataAnnotationsValidator/>
                <MudGrid>
                    <MudItem xs="12" md="12">
                        <MudCardContent>
                            <MudTextField Label="Email"
                                              @bind-Value="input.Email" For="@(() => input.Email)"/>
                            <MudTextField Label="Password"
                                              @bind-Value="input.Password" For="@(() => input.Password)"/>
                        </MudCardContent>
                    </MudItem>
                    <MudItem xs="12" md="12">
                        <MudCardActions>
                            <MudPaper Class="d-flex align-center flex-grow-1 gap-4" Elevation="0">
                               <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Class="mt-5" Color="Color.Default">Login</MudButton>
                            </MudPaper>
                        </MudCardActions>
                    </MudItem>
                </MudGrid>
            </EditForm>
        </MudPaper>

        <MudPaper Class="d-flex justify-center flex-grow-1 gap-4" Elevation="0">
            <MudLink Href="/register">You don't have an account? Register as a new user!</MudLink> 
        </MudPaper>
    </MudItem>
    <MudItem md="3"></MudItem>
</MudGrid>

@code {
    private LoginViewModel input = new LoginViewModel();
    private ApiResponseViewModel response;

    private bool showAlert = false;

    async Task Submit()
    {
        this.response = await this.usersService.LoginAsync(input);

        if (this.response.IsSuccessful)
        {
            await this.localStorage.SetItemAsync("email", input.Email);
            this.navigationManager.NavigateTo("/");
        }
        else
        {
            this.showAlert = true;
        }
    }

    private void CloseMe()
    {
        this.showAlert = false;
    }
}